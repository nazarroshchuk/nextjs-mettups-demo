{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nazarroshchuk/Desktop/Udemy_Maxilian_course/section_23_NextJS-onwards-to-a-bigger-project-starting-project/pages/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { getAllMeetups } from \"../services/getAllMeetups\";\nimport { DATA_BASE_URL } from \"../services/URL_data_base\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n} // export async function getServerSideProps(context) {\n//     // fetch data from an API\n//     // read data from  filesystem\n//\n//     const request = context.request;\n//     const response = context.response;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  // read data from  filesystem\n  //const meetups = await getAllMeetups();\n  const client = await MongoClient.connect('mongodb+srv://nazarii_roshchuk_user:PoXMzXyiJjHgxHPd@cluster0.gbni1.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups');\n  const meetups = await meetupsCollections.find().toArray();\n  await client.close();\n  return {\n    props: {\n      meetups: meetups.map(m => _objectSpread(_objectSpread({}, m), {}, {\n        id: m._id.toString(),\n        _id: m._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/nazarroshchuk/Desktop/Udemy_Maxilian_course/section_23_NextJS-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MongoClient","MeetupList","getAllMeetups","DATA_BASE_URL","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollections","collection","find","toArray","close","map","m","id","_id","toString","revalidate"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,SAAQC,aAAR,QAA4B,2BAA5B;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBACQ,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UADR;AAGH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA;AACA;AAEA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,qHAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMN,OAAO,GAAG,MAAMK,kBAAkB,CAACE,IAAnB,GAA0BC,OAA1B,EAAtB;AACA,QAAMN,MAAM,CAACO,KAAP,EAAN;AAEA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,CAAC,oCACfA,CADe;AAElBC,QAAAA,EAAE,EAAED,CAAC,CAACE,GAAF,CAAMC,QAAN,EAFc;AAGlBD,QAAAA,GAAG,EAAEF,CAAC,CAACE,GAAF,CAAMC,QAAN;AAHa,QAAb;AADN,KADJ;AAQHC,IAAAA,UAAU,EAAE;AART,GAAP;AAUH;AAED,eAAejB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport {getAllMeetups} from \"../services/getAllMeetups\";\nimport {DATA_BASE_URL} from \"../services/URL_data_base\";\n\n\nfunction HomePage(props) {\n    return (\n            <MeetupList meetups={props.meetups} />\n    )\n}\n\n// export async function getServerSideProps(context) {\n//     // fetch data from an API\n//     // read data from  filesystem\n//\n//     const request = context.request;\n//     const response = context.response;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n\nexport async function getStaticProps() {\n    // fetch data from an API\n    // read data from  filesystem\n    //const meetups = await getAllMeetups();\n\n    const client = await MongoClient.connect('mongodb+srv://nazarii_roshchuk_user:PoXMzXyiJjHgxHPd@cluster0.gbni1.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n    const meetupsCollections = db.collection('meetups');\n\n    const meetups = await meetupsCollections.find().toArray();\n    await client.close();\n\n    return {\n        props: {\n            meetups: meetups.map(m => ({\n                ...m,\n                id: m._id.toString(),\n                _id: m._id.toString()\n            })),\n        },\n        revalidate: 1,\n    }\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}