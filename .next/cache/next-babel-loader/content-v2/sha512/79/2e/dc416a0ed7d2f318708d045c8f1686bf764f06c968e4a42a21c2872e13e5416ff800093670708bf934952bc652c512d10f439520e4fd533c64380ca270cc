{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nazarroshchuk/Desktop/Udemy_Maxilian_course/section_23_NextJS-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { getMeetupsStaticPaths } from \"../../services/getMeetupsStaticPaths\";\n\nconst MeetupDetails = ({\n  meetupData\n}) => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: meetupData.image,\n    title: meetupData.title,\n    address: meetupData.address,\n    description: meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const meetups = await getMeetupsStaticPaths();\n  return {\n    fallback: false,\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  const client = await MongoClient.connect('mongodb+srv://nazarii_roshchuk_user:PoXMzXyiJjHgxHPd@cluster0.gbni1.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups');\n  const selectedMeetup = await meetupsCollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  await client.close();\n  return {\n    props: {\n      meetupData: _objectSpread(_objectSpread({}, selectedMeetup), {}, {\n        id: selectedMeetup._id.toString(),\n        _id: selectedMeetup._id.toString()\n      })\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/nazarroshchuk/Desktop/Udemy_Maxilian_course/section_23_NextJS-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","getMeetupsStaticPaths","MeetupDetails","meetupData","image","title","address","description","getStaticPaths","meetups","fallback","paths","map","m","params","meetupId","_id","toString","getStaticProps","context","console","log","client","connect","db","meetupsCollections","collection","selectedMeetup","findOne","close","props","id"],"mappings":";;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACtC,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,UAAU,CAACC,KADtB;AAEI,IAAA,KAAK,EAAED,UAAU,CAACE,KAFtB;AAGI,IAAA,OAAO,EAAEF,UAAU,CAACG,OAHxB;AAII,IAAA,WAAW,EAAEH,UAAU,CAACI;AAJ5B;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,OAAO,GAAG,MAAMR,qBAAqB,EAA3C;AAEA,SAAO;AACHS,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEF,OAAO,CAACG,GAAR,CAAYC,CAAC,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,CAAC,CAACG,GAAF,CAAMC,QAAN;AAAZ;AAAV,KAAL,CAAb;AAFJ,GAAP;AAIH;AAED,OAAO,eAAgBC,cAAhB,CAA+BC,OAA/B,EAAwC;AAC3C;AACA,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEA,QAAMO,MAAM,GAAG,MAAMvB,WAAW,CAACwB,OAAZ,CAAoB,qHAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMC,cAAc,GAAG,MAAMF,kBAAkB,CAACG,OAAnB,CAA2B;AAAEZ,IAAAA,GAAG,EAAEhB,QAAQ,CAACe,QAAD;AAAf,GAA3B,CAA7B;AACA,QAAMO,MAAM,CAACO,KAAP,EAAN;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACH3B,MAAAA,UAAU,kCACHwB,cADG;AAENI,QAAAA,EAAE,EAAEJ,cAAc,CAACX,GAAf,CAAmBC,QAAnB,EAFE;AAGND,QAAAA,GAAG,EAAEW,cAAc,CAACX,GAAf,CAAmBC,QAAnB;AAHC;AADP;AADJ,GAAP;AASH;AAED,eAAef,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { getMeetupsStaticPaths } from \"../../services/getMeetupsStaticPaths\";\n\n\nconst MeetupDetails = ({ meetupData }) => {\n    return (\n        <MeetupDetail\n            image={meetupData.image}\n            title={meetupData.title}\n            address={meetupData.address}\n            description={meetupData.description}\n        />\n    )\n}\n\nexport async function getStaticPaths() {\n    const meetups = await getMeetupsStaticPaths();\n\n    return {\n        fallback: false,\n        paths: meetups.map(m => ({ params: { meetupId: m._id.toString() } })),\n    }\n}\n\nexport async  function getStaticProps(context) {\n    //fetch data for a single meetup\n    const meetupId = context.params.meetupId;\n\n    console.log(meetupId);\n\n    const client = await MongoClient.connect('mongodb+srv://nazarii_roshchuk_user:PoXMzXyiJjHgxHPd@cluster0.gbni1.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollections = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollections.findOne({ _id: ObjectId(meetupId) });\n    await client.close();\n\n    return {\n        props: {\n            meetupData: {\n                ...selectedMeetup,\n                id: selectedMeetup._id.toString(),\n                _id: selectedMeetup._id.toString()\n            }\n        }\n    }\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}