{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nazarroshchuk/Desktop/Udemy_Maxilian_course/section_23_NextJS-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\nimport { getMeetupsStaticPaths } from \"../../services/getMeetupsStaticPaths\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: 'https://static.uvidpustku.com/wp-content/uploads/2020/03/perast-4613542_1920.jpg',\n    title: 'A First Meetup',\n    address: 'Some Street, Some City',\n    description: 'The meetup description'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://nazarii_roshchuk_user:PoXMzXyiJjHgxHPd@cluster0.gbni1.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollections = db.collection('meetups');\n  const meetups = await meetupsCollections.find({}, {\n    _id: 1\n  }).toArray();\n  await client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    }))\n  };\n}\nexport function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: 'https://static.uvidpustku.com/wp-content/uploads/2020/03/perast-4613542_1920.jpg',\n        title: 'A First Meetup',\n        address: 'Some Street, Some City',\n        description: 'The meetup description'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/nazarroshchuk/Desktop/Udemy_Maxilian_course/section_23_NextJS-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","getMeetupsStaticPaths","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","m","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","id","image","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAGA,MAAMC,aAAa,GAAG,MAAM;AACxB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAE,kFADX;AAEI,IAAA,KAAK,EAAE,gBAFX;AAGI,IAAA,OAAO,EAAE,wBAHb;AAII,IAAA,WAAW,EAAE;AAJjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,qHAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMC,OAAO,GAAG,MAAMF,kBAAkB,CAACG,IAAnB,CAAwB,EAAxB,EAA4B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA5B,EAAwCC,OAAxC,EAAtB;AACA,QAAMR,MAAM,CAACS,KAAP,EAAN;AAGA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,CAAC,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,CAAC,CAACN,GAAF,CAAMS,QAAN;AAAZ;AAAV,KAAL,CAAb;AAFJ,GAAP;AAIH;AAED,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACpC;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAO;AACHM,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,EAAE,EAAER,QADI;AAERS,QAAAA,KAAK,EAAE,kFAFC;AAGRC,QAAAA,KAAK,EAAE,gBAHC;AAIRC,QAAAA,OAAO,EAAE,wBAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAWH;AAED,eAAe7B,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\nimport { getMeetupsStaticPaths } from \"../../services/getMeetupsStaticPaths\";\n\n\nconst MeetupDetails = () => {\n    return (\n        <MeetupDetail\n            image={'https://static.uvidpustku.com/wp-content/uploads/2020/03/perast-4613542_1920.jpg'}\n            title={'A First Meetup'}\n            address={'Some Street, Some City'}\n            description={'The meetup description'}\n        />\n    )\n}\n\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect('mongodb+srv://nazarii_roshchuk_user:PoXMzXyiJjHgxHPd@cluster0.gbni1.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollections = db.collection('meetups');\n\n    const meetups = await meetupsCollections.find({}, { _id: 1 }).toArray();\n    await client.close();\n\n\n    return {\n        fallback: false,\n        paths: meetups.map(m => ({ params: { meetupId: m._id.toString() } })),\n    }\n}\n\nexport function getStaticProps(context) {\n    //fetch data for a single meetup\n    const meetupId = context.params.meetupId;\n\n    console.log(meetupId)\n\n    return {\n        props: {\n            meetupData: {\n                id: meetupId,\n                image: 'https://static.uvidpustku.com/wp-content/uploads/2020/03/perast-4613542_1920.jpg',\n                title: 'A First Meetup',\n                address: 'Some Street, Some City',\n                description: 'The meetup description',\n            }\n        }\n    }\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}